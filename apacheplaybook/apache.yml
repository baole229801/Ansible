---
- name: Install Apache.
  hosts: centos
  #gather_facts: false
  become: true

  #environment: 
  #  http_proxy: http://example-proxy:80/
  #  https_proxy: https://example-proxy:443/

  vars:
    proxy_vars:
      http_proxy: http://example-proxy:80/
      https_proxy: https://example-proxy:443/

  pre_tasks:
    - name: Update package maneger if needed.
      package:
        update_cache: true
        #cache_valid_time: 3600
    
    #- debug: var=ansible_os_family

    - name: Load variable files.       
      include_vars: "{{ item }}"
      with_first_found:
        - "vars/apache_{{ ansible_os_family }}.yml"
        - "vars/apache_default.yml"
  
  handlers:
    - name: restart apache
      service:
        name: "{{ apache_service }}"
        state: restarted
      #notify: restart memcache
    
    - name: restart memcache
      service: 
        name: memcache
        state: restarted

  tasks:
  #  - name: Add and environment variable to the remote user's shell.
  #    lineinfile: 
  #      dest: "~/.bash_profile"
  #      regexp: '^ENV_VAR='
  #      line: 'ENV_VAR=value'
  #    become: false

  #  - name: Get the value of an environment variable.
  #    shell: 'source ~/.bash_profile && echo $ENV_VAR'
  #    register: foo

  #  - debug:
  #      msg: "The variable is {{ foo.stdout }}"
  #  - name: Download a file. 
  #    get_url:
  #      url: http://ipv4.download.thinkbroadband.com/20MB.zip
  #      dest: /tmp 
  #    environment: proxy_vars
        #http_proxy: http://example-proxy:80/
        #https_proxy: https://example-proxy:443/

    - name: Ensure Apache is installed.
      package:
        name: "{{ apache_package }}"
        state: present
      register: foo

    - debug: var=foo['rc']
    
    - name: Copy configuration.
      copy:
        src: files/test.conf
        dest: "{{ apache_config_dir }}/test.conf"
      notify: 
        - restart apache
        - restart memcache

    - name: Make sure handlers are flushed immediately.
      meta: flush_handlers
    
    - name: Ensure Apache is running and at boot.
      service:
        name: "{{ apache_service }}"
        state: started
        enabled: yes